int maximum(int a,int b,int c,int d,int e,int f)
{
    a=max(a,b);
    c=max(c,d);
    e=max(e,f);
    int max1=max(a,max(c,e));

    return max1;
}


int lcs(string a,string b,string c)
{
    int m=a.size();//rows
    int n=b.size();//column
    int o=c.size();
    if(m==0 or n==0 or o==0)
    return 0;

    int arr[m+1][n+1][o+1];
   

    for(int i=0;i<=m;i++)
    {
        for(int j=0;j<=n;j++)
        {
            for(int k=0;k<=o;k++)
            {
                if(i==0 or j==0 or k==0)
                {
                    arr[i][j][k]=0;
                }
                else if(a[i-1]==b[j-1] and b[j-1]==c[k-1])
                {
                    arr[i][j][k]=arr[i-1][j-1][k-1]+1;
                }
                else
                {
                    arr[i][j][k]=maximum(arr[i-1][j][k],arr[i][j-1][k],arr[i][j][k-1],arr[i-1][j-1][k],arr[i-1][j][k-1],arr[i][j-1][k-1]);
                }
            }

        }
    }
    //cout<<arr[m][n][o]<<"\n";
    return arr[m][n][o];
}

int solve(string a, string b, string c) {
    
    return lcs(a,b,c);

}
